.\" Automatically generated by Pandoc 2.0.6
.\"
.TH "s1kd\-acronyms" "1" "2021\-04\-16" "" "s1kd\-tools"
.hy
.SH NAME
.PP
s1kd\-acronyms \- Manage acronyms in S1000D data modules
.SH SYNOPSIS
.IP
.nf
\f[C]
s1kd\-acronyms\ \-h?
s1kd\-acronyms\ [\-dlpqtvx^]\ [\-n\ <#>]\ [\-o\ <file>]\ [\-T\ <types>]
\ \ \ \ \ \ \ \ \ \ \ \ \ \ [<dmodule>...]
s1kd\-acronyms\ [\-flqv]\ [\-i|\-I|\-!]\ [\-m|\-M\ <acr>]\ [\-o\ <file>]\ [\-X\ <xpath>]
\ \ \ \ \ \ \ \ \ \ \ \ \ \ [<dmodule>...]
s1kd\-acronyms\ [\-D|\-P]\ [\-flqv]\ [\-o\ <file>]\ [<dmodule>...]
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[I]s1kd\-acronyms\f[] tool is used to manage acronyms in S1000D
data modules in one of three ways:
.IP \[bu] 2
Generate a list of unique acronyms used in all specified data modules.
.IP \[bu] 2
Mark up acronyms automatically based on a specified list.
.IP \[bu] 2
Remove acronym markup.
.SH OPTIONS
.TP
.B \-D, \-\-delete
Remove acronym markup, flattening it to the acronym term.
.RS
.RE
.TP
.B \-d, \-\-deflist
Format XML output as an S1000D \f[C]<definitionList>\f[].
.RS
.RE
.TP
.B \-f, \-\-overwrite
When marking up acronyms with the \-m option, overwrite the input data
modules instead of writing to stdout.
.RS
.RE
.TP
.B \-h, \-?, \-\-help
Show help/usage message.
.RS
.RE
.TP
.B \-I, \-\-always\-ask
In interactive mode, show a prompt for all acronyms, not just those with
multiple definitions.
This can be useful if some occurrences of acronym terms should be
ignored.
.RS
.RE
.TP
.B \-i, \-\-interactive
Markup acronyms in interactive mode.
If the specified acronyms list contains multiple definitions for a given
acronym term, the tool will prompt the user with the context in which
the acronym is used and present a list of the definitions for them to
choose from.
.RS
.PP
When not in interactive mode, the first definition found will be used.
.RE
.TP
.B \-l, \-\-list
Treat input (stdin or arguments) as lists of filenames of data modules
to find or markup acronyms in, rather than data modules themselves.
.RS
.RE
.TP
.B \-M, \-\-acronym\-list <list>
Like the \-m option, but use a custom list of acronyms instead of the
default \f[C]\&.acronyms\f[] file.
.RS
.RE
.TP
.B \-m, \-\-markup
Instead of listing acronyms in the specified data modules, automatically
markup acronyms in the data module using the \f[C]\&.acronyms\f[] file.
.RS
.RE
.TP
.B \-n, \-\-width <#>
Minimum number of spaces after the term in pretty\-printed text output.
.RS
.RE
.TP
.B \-o, \-\-out <file>
Output to <file> instead of stdout.
.RS
.RE
.TP
.B \-P, \-\-preformat
Remove acronym markup by preformatting it.
The element \f[C]<acronym>\f[] is flattened to the definition, followed
by the term in brackets [()].
The element \f[C]<acronymTerm>\f[] is flattened to the term.
.RS
.RE
.TP
.B \-p, \-\-pretty
Pretty print text/XML acronym list output.
.RS
.RE
.TP
.B \-q, \-\-quiet
Quiet mode.
Errors are not printed.
.RS
.RE
.TP
.B \-T, \-\-types <types>
Only search for acronyms with an attribute \f[C]acronymType\f[] whose
value is contained within the string <types>.
.RS
.RE
.TP
.B \-t, \-\-table
Format XML output as an S1000D \f[C]<table>\f[].
.RS
.RE
.TP
.B \-v, \-\-verbose
Verbose output.
.RS
.RE
.TP
.B \-X, \-\-select <xpath>
When marking up acronyms with \-m/\-M, use a custom XPath expression to
specify which text nodes to search for acronyms in.
By default, this is all text nodes in any element where acronyms are
allowed.
This must be the path to the text() nodes, not the elements, e.g.
\f[C]//para/text()\f[] and not simply \f[C]//para\f[].
.RS
.RE
.TP
.B \-x, \-\-xml
Use XML output instead of plain text.
.RS
.RE
.TP
.B \-!, \-\-defer\-choice
Mark where acronyms are found using a \f[C]<chooseAcronym>\f[] element,
whose child elements are all possible acronyms matching the term.
Another program can then use this as input to actually prompt the user.
.RS
.RE
.TP
.B \-^, \-\-remove\-deleted
List acronyms with elements that have a change type of "delete" removed.
.RS
.RE
.TP
.B \-\-version
Show version information.
.RS
.RE
.TP
.B <dmodule>...
Data modules to find acronyms in.
If none are specified, input is taken from stdin.
.RS
.RE
.PP
In addition, the following options allow configuration of the XML
parser:
.TP
.B \-\-dtdload
Load the external DTD.
.RS
.RE
.TP
.B \-\-huge
Remove any internal arbitrary parser limits.
.RS
.RE
.TP
.B \-\-net
Allow network access to load external DTD and entities.
.RS
.RE
.TP
.B \-\-noent
Resolve entities.
.RS
.RE
.TP
.B \-\-parser\-errors
Emit errors from parser.
.RS
.RE
.TP
.B \-\-parser\-warnings
Emit warnings from parser.
.RS
.RE
.TP
.B \-\-xinclude
Do XInclude processing.
.RS
.RE
.TP
.B \-\-xml\-catalog <file>
Use an XML catalog when resolving entities.
Multiple catalogs may be loaded by specifying this option multiple
times.
.RS
.RE
.SS \f[C]\&.acronyms\f[] file
.PP
This file specifies a list of acronyms for a project.
By default, the program will search for a file named
\f[C]\&.acronyms\f[] in the current directory and parent directories,
but any file can be specified using the \-M option.
.PP
Example of .acronyms file format:
.IP
.nf
\f[C]
<acronyms>
<acronym\ acronymType="at01">
<acronymTerm>BREX</acronymTerm>
<acronymDefinition>Business\ Rules\ Exchange</acronymDefinition>
</acronym>
<acronym\ acronymType="at01">
<acronymTerm>SNS</acronymTerm>
<acronymDefinition>Standard\ Numbering\ System</acronymDefinition>
</acronym>
</acronyms>
\f[]
.fi
.SH EXAMPLES
.PP
List all acronyms used in all data modules:
.IP
.nf
\f[C]
$\ s1kd\-acronyms\ DMC\-*.XML
\f[]
.fi
.PP
Markup predefined acronyms in a data module:
.IP
.nf
\f[C]
$\ s1kd\-acronyms\ \-mf\ DMC\-EX\-A\-00\-00\-00\-00A\-040A\-D_EN\-CA.XML
\f[]
.fi
.PP
Unmarkup acronyms in a data module:
.IP
.nf
\f[C]
$\ s1kd\-acronyms\ \-Df\ DMC\-EX\-A\-00\-00\-00\-00A\-040A\-D_EN\-CA.XML
\f[]
.fi
.SH AUTHORS
khzae.net.
