.\" Automatically generated by Pandoc 2.3.1
.\"
.TH "s1kd\-fmgen" "1" "2021\-04\-16" "" "s1kd\-tools"
.hy
.SH NAME
.PP
s1kd\-fmgen \- Generate front matter data module contents
.SH SYNOPSIS
.IP
.nf
\f[C]
s1kd\-fmgen\ [\-D\ <TYPE>]\ [\-F\ <FMTYPES>]\ [\-I\ <date>]\ [\-P\ <PM>]
\ \ \ \ \ \ \ \ \ \ \ [\-p\ <name>=<val>\ ...]\ [\-t\ <TYPE>]\ [\-x\ <XSL>]
\ \ \ \ \ \ \ \ \ \ \ [\-,.flqvh?]\ [<DM>...]
\f[]
.fi
.SH DESCRIPTION
.PP
The \f[I]s1kd\-fmgen\f[] tool generates the content section for front
matter data modules from either a standard publication module, or the
combined format of the s1kd\-flatten(1) tool.
Some front matter types require the use of the combined format,
particularly those that list information not directly found in the
publication module, such as the highlights (HIGH) type.
.SH OPTIONS
.TP
.B \-,, \-\-dump\-fmtypes\-xml
Dump the built\-in \f[C]\&.fmtypes\f[] XML format.
.RS
.RE
.TP
.B \-., \-\-dump\-fmtypes
Dump the built\-in \f[C]\&.fmtypes\f[] simple text format.
.RS
.RE
.TP
.B \-D, \-\-dump\-xsl <TYPE>
Dump the built\-in XSLT used to generate the specified type of front
matter.
.RS
.RE
.TP
.B \-F, \-\-fmtypes <FMTYPES>
Specify a custom \f[C]\&.fmtypes\f[] file.
.RS
.RE
.TP
.B \-f, \-\-overwrite
Overwrite the specified front matter data module files after generating
their content.
.RS
.RE
.TP
.B \-h, \-?, \-\-help
Show usage message.
.RS
.RE
.TP
.B \-I, \-\-date <date>
Set the issue date of the generated front matter data modules.
This can be a specific date in the form of "YYYY\-MM\-DD", "\-" for the
current date, or "pm" to use the issue date of the publication module.
.RS
.RE
.TP
.B \-l, \-\-list
Treat input (stdin or arguments) as lists of front matter data modules
to generate content for, rather than data modules themselves.
If reading list from stdin, the \-P option must be used to specify the
publication module.
.RS
.RE
.TP
.B \-P, \-\-pm <PM>
Publication module or s1kd\-flatten(1) PM format file to generate
contents from.
If none is specified, the tool will read from stdin.
.RS
.RE
.TP
.B \-p, \-\-param <name>=<value>
Pass a parameter to the XSLT stylesheets used to generate the front
matter content.
Multiple parameters can be specified by using this option multiple
times.
.RS
.PP
The following parameters are automatically supplied to any stylesheet,
and therefore their names should be considered reserved:
.IP \[bu] 2
\f[C]"type"\f[] \- The front matter type name (e.g., HIGH) that was
matched in the \f[C]\&.fmtypes\f[] file or specified by the user with
the \-t option.
.RE
.TP
.B \-q, \-\-quiet
Quiet mode.
Do not print errors.
.RS
.RE
.TP
.B \-t, \-\-type <TYPE>
Generate content for this type of front matter.
Supported types are:
.RS
.IP \[bu] 2
HIGH \- Highlights
.IP \[bu] 2
LOA \- List of abbreviations
.IP \[bu] 2
LOASD \- List of applicable specifications and documentation
.IP \[bu] 2
LOEDM \- List of effective data modules
.IP \[bu] 2
LOI \- List of illustrations
.IP \[bu] 2
LOS \- List of symbols
.IP \[bu] 2
LOT \- List of terms
.IP \[bu] 2
LOTBL \- List of tables
.IP \[bu] 2
TOC \- Table of contents
.IP \[bu] 2
TP \- Title page
.RE
.TP
.B \-v, \-\-verbose
Verbose output.
Specify multiple times to increase the verbosity.
.RS
.RE
.TP
.B \-x, \-\-xsl <XSL>
Use the specified XSLT script to generate the front matter contents
instead of the built\-in XSLT or the user\-configured XSLT from the
\f[C]\&.fmtypes\f[] file.
.RS
.RE
.TP
.B \-\-version
Show version information.
.RS
.RE
.TP
.B <DM>...
Front matter data modules to generate content for.
If no front matter type can be determined for a data module, it will be
ignored.
.RS
.RE
.PP
In addition, the following options allow configuration of the XML
parser:
.TP
.B \-\-dtdload
Load the external DTD.
.RS
.RE
.TP
.B \-\-huge
Remove any internal arbitrary parser limits.
.RS
.RE
.TP
.B \-\-net
Allow network access to load external DTD and entities.
.RS
.RE
.TP
.B \-\-noent
Resolve entities.
.RS
.RE
.TP
.B \-\-parser\-errors
Emit errors from parser.
.RS
.RE
.TP
.B \-\-parser\-warnings
Emit warnings from parser.
.RS
.RE
.TP
.B \-\-xinclude
Do XInclude processing.
.RS
.RE
.TP
.B \-\-xml\-catalog <file>
Use an XML catalog when resolving entities.
Multiple catalogs may be loaded by specifying this option multiple
times.
.RS
.RE
.SS \f[C]\&.fmtypes\f[] file
.PP
This file specifies a list of info codes to associate with a particular
type of front matter.
.PP
Optionally, a path to an XSLT script can be given for each info code,
which will be used to generate the front matter instead of the built\-in
XSLT.
The path to an XSLT script will be interpreted relative to the location
of the \f[C]\&.fmtypes\f[] file (typically, the top directory of the
CSDB).
The \-D option can be used to dump the built\-in XSLT for a type of
front matter as a starting point for a custom script.
.PP
Optionally, in the XML format, the attribute \f[C]ignoreDel\f[] may be
specified to control whether deleted data modules and elements are
ignored when generating front matter contents.
These are data modules with an issue type of "\f[C]deleted\f[]" and
elements with a change type of "\f[C]delete\f[]".
A value of "\f[C]yes\f[]" means deleted content will not be included,
while "\f[C]no\f[]" means it will.
If this attribute is not specified, then a default value will be used
based on the type of front matter.
The following types will ignore deleted content by default:
.IP \[bu] 2
LOA
.IP \[bu] 2
LOASD
.IP \[bu] 2
LOI
.IP \[bu] 2
LOS
.IP \[bu] 2
LOTBL
.IP \[bu] 2
TOC
.IP \[bu] 2
TP
.PP
By default, the program will search for a file named \f[C]\&.fmtypes\f[]
in the current directory and parent directories, but any file can be
specified using the \-F option.
.PP
Example of simple text format:
.IP
.nf
\f[C]
001\ \ \ \ TP
005\ \ \ \ LOA
006\ \ \ \ LOT
007\ \ \ \ LOS
009\ \ \ \ TOC
00A\ \ \ \ LOA
00S\ \ \ \ LOEDM
00U\ \ \ \ HIGH\ \ \ \ fm/high.xsl
00V\ \ \ \ LOASD
00Z\ \ \ \ LOTBL
\f[]
.fi
.PP
Example of XML format:
.IP
.nf
\f[C]
<fmtypes>
<fm\ infoCode="001"\ type="TP"/>
<fm\ infoCode="005"\ type="LOA"/>
<fm\ infoCode="006"\ type="LOT"/>
<fm\ infoCode="007"\ type="LOS"/>
<fm\ infoCode="009"\ type="TOC"/>
<fm\ infoCode="00A"\ type="LOI"/>
<fm\ infoCode="00S"\ type="LOEDM"/>
<fm\ infoCode="00U"\ type="HIGH"\ xsl="fm/high.xsl"/>
<fm\ infoCode="00V"\ type="LOASD"/>
<fm\ infoCode="00Z"\ type="LOTBL"/>
</fmtypes>
\f[]
.fi
.PP
The info code of each entry in the \f[C]\&.fmtypes\f[] file may also
include an info code variant.
This allows different transformations to be used based on the variant:
.IP
.nf
\f[C]
<fmtypes>
<fm\ infoCode="00UA"\ type="HIGH"\ xsl="fm/high.xsl"/>
<fm\ infoCode="00UB"\ type="HIGH"\ xsl="fm/high\-updates.xsl"/>
<fm\ infoCode="00U"\ \ type="HIGH"/>
</fmtypes>
\f[]
.fi
.PP
In the example above, a highlights data module (00U) with info code
variant A will use an XSL transformation that creates a simple
highlights, while a highlights data module with info code variant B will
use an XSL transformation that creates a highlights with update
instructions.
All other variants will use the built\-in XSLT.
.PP
Entries are chosen in the order they are listed in the
\f[C]\&.fmtypes\f[] file.
An info code which does not specify a variant matches all possible
variants.
.SS Optional title page elements
.PP
When re\-generating the front matter content for a title page data
module, optional elements which cannot be derived from the publication
module (such as the product illustration or bar code) will be copied
from the source data module when updating it.
.SS Multi\-pass transforms
.PP
Rather than a literal XSLT file, the path specified for the \f[C]xsl\f[]
attribute in the \f[C]\&.fmtypes\f[] file or the \-x (\-\-xsl) option
may be an XProc file which contains a pipeline with multiple
stylesheets.
This allows for multi\-pass transformations.
.RS
.PP
\f[B]Note\f[]
.PP
Only a small subset of XProc is supported at this time.
.RE
.PP
Example:
.IP
.nf
\f[C]
<p:pipeline
xmlns:p="http://www.w3.org/ns/xproc"
xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
version="1.0">
<p:xslt\ name="Pass\ 1">
<p:input\ port="stylesheet">
<p:document\ href="pass1.xsl"/>
</p:input>
<p:with\-param\ name="update\-instr"\ select="true()"/>
</p:xslt>
<p:xslt\ name="Pass\ 2">
<p:input\ port="stylesheet">
<p:inline>
<xsl:transform\ version="1.0">
\&...
</xsl:transform>
</p:inline>
</p:input>
</p:xslt>
</p:pipeline>
\f[]
.fi
.SH EXIT STATUS
.TP
.B 0
No errors.
.RS
.RE
.TP
.B 1
The date specified with \-I is invalid.
.RS
.RE
.TP
.B 2
No front matter types were specified.
.RS
.RE
.TP
.B 3
An unknown front matter type was specified.
.RS
.RE
.TP
.B 4
The resulting front matter content could not be merged in to a data
module.
.RS
.RE
.TP
.B 5
The stylesheet specified for a type of front matter was invalid.
.RS
.RE
.SH EXAMPLE
.PP
Generate the content for a title page front matter data module and
overwrite the file:
.IP
.nf
\f[C]
$\ s1kd\-flatten\ PMC\-EX\-12345\-00001\-00_001\-00_EN\-CA.XML\ |
>\ s1kd\-fmgen\ \-f\ DMC\-EX\-A\-00\-00\-00\-00A\-001A\-D_001\-00_EN\-CA.XML
\f[]
.fi
.SH AUTHORS
khzae.net.
